#include "math/angle.h2"

Vec2: @basic_value @euclidean_vector<double> type = {

	public x: double = 0.0;
	public y: double = 0.0;
	
	operator=: (out this, _x: double, _y: double) == { x = _x; y = _y; }
	operator=: (out this, _all: double) == { x = _all; y = _all; }

	format: (this) -> std::string = {
		return std::format("[{}, {}]", x, y);
	}

	reciprocal: (this) -> Vec2 = {
		return Vec2( 1.0 / x, 1.0 / y );
	}

	rotate: (inout this, by: Angle) = {
		cs: = std::cos( by.radians() );
		sn: = std::sin( by.radians() );

		px: = x * cs - y * sn; 
		py: = x * sn + y * cs;

		x = px;
		y = py;
	}
}

// {fmt} output shim
std::string format_as(const Vec2& inst) {
  return inst.format();
}
